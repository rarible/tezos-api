/**
 * TzKT API
 *
 * # Introduction  TzKT Explorer provides free REST API and WebSocket API for accessing detailed Tezos blockchain data and helps developers build more services and applications on top of Tezos. TzKT is an open-source project, so you can easily clone and build it and use it as a self-hosted service to avoid any risks of depending on third-party services.  TzKT API is available for the following Tezos networks with the following base URLs:  - Mainnet: `https://api.tzkt.io/` or `https://api.mainnet.tzkt.io/` ([view docs](https://api.tzkt.io))  - Granadanet: `https://api.granadanet.tzkt.io/` ([view docs](https://api.granadanet.tzkt.io))     - Hangzhou2net: `https://api.hangzhou2net.tzkt.io/` ([view docs](https://api.hangzhou2net.tzkt.io))  We also provide a staging environment for testing newest features and pre-updating client applications before deploying to production:  - Mainnet staging: `https://staging.api.tzkt.io/` or `https://staging.api.mainnet.tzkt.io/` ([view docs](https://staging.api.tzkt.io))  Feel free to contact us if you have any questions or feature requests. Your feedback really helps us make TzKT better!  - Discord: https://discord.gg/aG8XKuwsQd - Telegram: https://t.me/baking_bad_chat - Slack: https://tezos-dev.slack.com/archives/CV5NX7F2L - Twitter: https://twitter.com/TezosBakingBad - Email: hello@baking-bad.org  And don't forget to star TzKT project [on GitHub](https://github.com/baking-bad/tzkt) ;)  # Terms of Use  TzKT API is free for everyone and for both commercial and non-commercial usage.  If your application or service uses the TzKT API in any forms: directly on frontend or indirectly on backend, you should mention that fact on your website or application by placing the label **\"Powered by TzKT API\"** with a direct link to [tzkt.io](https://tzkt.io).   # Rate Limits  There will be no rate limits as long as our servers can handle the load without additional infrastructure costs. However, any apparent abuse will be prevented by setting targeted rate limits.  Check out [Tezos Explorer API Best Practices](https://baking-bad.org/blog/tag/TzKT/) and in particular [how to optimize requests count](https://baking-bad.org/blog/2020/07/29/tezos-explorer-api-tzkt-how-often-to-make-requests/).  --- 
 *
 * The version of the OpenAPI document: v1.7.0
 * Contact: hello@baking-bad.org
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.rarible.tzkt.models


import com.rarible.tzkt.filters.NullFilterImpl
import com.rarible.tzkt.filters.AsUnlikeFilterImpl

/**
 * 
 *
 * @param eq **Equal** filter mode (optional, i.e. `param.eq=123` is the same as `param=123`). \\ Specify a JSON value to get items where the specified field is equal to the specified value.  Example: `?parameter.from=tz1...` or `?parameter.signatures.[3].[0]=null` or `?parameter.sigs.[*]=null`.
 * @param ne **Not equal** filter mode. \\ Specify a JSON value to get items where the specified field is not equal to the specified value.  Example: `?parameter.ne=true` or `?parameter.amount.ne=0`.
 * @param gt **Greater than** filter mode. \\ Specify a string to get items where the specified field is greater than the specified value. Note that all stored JSON values are strings, so this will be a comparison of two strings, so we recommend comparing values of the same type, e.g. numeric strings with numeric strings (`parameter.number.gt=123`), datetime strings with datetime strings (`parameter.date.gt=2021-01-01`), etc. Otherwise, result may surprise you.  Example: `?parameter.balance.gt=1234` or `?parameter.time.gt=2021-02-01`.
 * @param ge **Greater or equal** filter mode. \\ Specify a string to get items where the specified field is greater than equal to the specified value. Note that all stored JSON values are strings, so this will be a comparison of two strings, so we recommend comparing values of the same type, e.g. numeric strings with numeric strings (`parameter.number.gt=123`), datetime strings with datetime strings (`parameter.date.gt=2021-01-01`), etc. Otherwise, result may surprise you.  Example: `?parameter.balance.ge=1234` or `?parameter.time.ge=2021-02-01`.
 * @param lt **Less than** filter mode. \\ Specify a string to get items where the specified field is less than the specified value. Note that all stored JSON values are strings, so this will be a comparison of two strings, so we recommend comparing values of the same type, e.g. numeric strings with numeric strings (`parameter.number.gt=123`), datetime strings with datetime strings (`parameter.date.gt=2021-01-01`), etc. Otherwise, result may surprise you.  Example: `?parameter.balance.lt=1234` or `?parameter.time.lt=2021-02-01`.
 * @param le **Less or equal** filter mode. \\ Specify a string to get items where the specified field is less than or equal to the specified value. Note that all stored JSON values are strings, so this will be a comparison of two strings, so we recommend comparing values of the same type, e.g. numeric strings with numeric strings (`parameter.number.gt=123`), datetime strings with datetime strings (`parameter.date.gt=2021-01-01`), etc. Otherwise, result may surprise you.  Example: `?parameter.balance.le=1234` or `?parameter.time.le=2021-02-01`.
 * @param `as` **Same as** filter mode. \\ Specify a string template to get items where the specified field matches the specified template. \\ This mode supports wildcard `*`. Use `\\*` as an escape symbol.  Example: `?parameter.as=*mid*` or `?parameter.as=*end`.
 * @param un **Unlike** filter mode. \\ Specify a string template to get items where the specified field doesn't match the specified template. This mode supports wildcard `*`. Use `\\*` as an escape symbol.  Example: `?parameter.un=*mid*` or `?parameter.un=*end`.
 * @param `in` **In list** (any of) filter mode. \\ Specify a comma-separated list of strings or JSON array to get items where the specified field is equal to one of the specified values. \\  Example: `?parameter.amount.in=1,2,3` or `?parameter.in=[{\"from\":\"tz1\",\"to\":\"tz2\"},{\"from\":\"tz2\",\"to\":\"tz1\"}]`.
 * @param ni **Not in list** (none of) filter mode. \\ Specify a comma-separated list of strings to get items where the specified field is not equal to all the specified values. \\ Use `\\,` as an escape symbol.  Example: `?parameter.amount.ni=1,2,3` or `?parameter.ni=[{\"from\":\"tz1\",\"to\":\"tz2\"},{\"from\":\"tz2\",\"to\":\"tz1\"}]`.
 * @param `null` **Is null** filter mode. \\ Use this mode to get items where the specified field is null or not.  Example: `?parameter.null` or `?parameter.null=false` or `?parameter.sigs.[0].null=false`.
 */

data class JsonParameter (
    val stringFilterImpl: AsUnlikeFilterImpl = AsUnlikeFilterImpl(),
    val nullFilterImpl: NullFilterImpl = NullFilterImpl()
)

