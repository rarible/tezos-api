fragment token on token {
    id
    minted
    minted_at
    supply
    token_id
    updated
    contract
    creator
    deleted
    tzkt_id
}

fragment token_by_owner on token_by_owner {
    id
    minted
    minted_at
    supply
    token_id
    updated
    contract
    creator
    deleted
    item_id
    tzkt_id
    owner
}

query GetTokensByIds($ids: [uuid!]!) {
    token(where: {id: {_in: $ids}}) {
        ...token
    }
}

query GetTokenMetaById($id: uuid!) {
    metadata_token(where: {id: {_eq: $id}, metadata_synced: {_eq: true}, metadata: {_is_null: false}}) {
        id
        contract
        db_updated_at
        metadata
        token_id
    }
}

query GetTokensAll($limit: Int!, $deleted: [Boolean!]!, $order_by: [token_order_by!]!) {
    token(where: {deleted: {_in: $deleted}}, limit: $limit, order_by: $order_by) {
        ...token
    }
}

query GetTokensAllContinuationDesc($limit: Int!, $deleted: [Boolean!]!, $date: timestamptz!, $id: uuid!) {
    token(where: {
        deleted: {_in: $deleted},
        _or: [{
            updated: {_lt: $date}
        },{
            updated: {_eq: $date},
            id: {_lt: $id}
        }]
    }, limit: $limit, order_by: [{updated: desc}, {id: desc}]) {
        ...token
    }
}

query GetTokensAllContinuationAsc($limit: Int!, $deleted: [Boolean!]!, $date: timestamptz!, $id: uuid!) {
    token(where: {
        deleted: {_in: $deleted},
        _or: [{
            updated: {_gt: $date}
        },{
            updated: {_eq: $date},
            id: {_gt: $id}
        }]
    }, limit: $limit, order_by: [{updated: asc}, {id: asc}]) {
        ...token
    }
}

query GetTokensByOwner($address: String!, $limit: Int!) {
    token_by_owner(where: {
        owner: {_eq: $address}
    }, limit: $limit, order_by: [{updated: desc}, {item_id: desc}]) {
        ...token_by_owner
    }
}

query GetTokensByOwnerContinuationDesc($address: String!, $limit: Int!, $date: timestamptz!, $id: String!) {
    token_by_owner(where: {
        owner: {_eq: $address},
        _or: [{
            updated: {_lt: $date}
        },{
            updated: {_eq: $date},
            item_id: {_lt: $id}
        }]
    }, limit: $limit, order_by: [{updated: desc}, {item_id: desc}]) {
        ...token_by_owner
    }
}

query GetTokensByCreator($address: String!, $limit: Int!) {
    token_by_owner(where: {
        creator: {_eq: $address}
    }, limit: $limit, order_by: [{updated: desc}, {item_id: desc}]) {
        ...token_by_owner
    }
}

query GetTokensByCreatorContinuationDesc($address: String!, $limit: Int!, $date: timestamptz!, $id: String!) {
    token_by_owner(where: {
        creator: {_eq: $address},
        _or: [{
            updated: {_lt: $date}
        },{
            updated: {_eq: $date},
            item_id: {_lt: $id}
        }]
    }, limit: $limit, order_by: [{updated: desc}, {item_id: desc}]) {
        ...token_by_owner
    }
}

query GetTokensByCollection($address: String!, $limit: Int!) {
    token_by_owner(where: {
        contract: {_eq: $address}
    }, limit: $limit, order_by: [{updated: desc}, {item_id: desc}]) {
        ...token_by_owner
    }
}

query GetTokensByCollectionContinuationDesc($address: String!, $limit: Int!, $date: timestamptz!, $id: String!) {
    token_by_owner(where: {
        contract: {_eq: $address},
        _or: [{
            updated: {_lt: $date}
        },{
            updated: {_eq: $date},
            item_id: {_lt: $id}
        }]
    }, limit: $limit, order_by: [{updated: desc}, {item_id: desc}]) {
        ...token_by_owner
    }
}

mutation RemoveTokenIdMeta($id: uuid!) {
    update_metadata_token_by_pk(pk_columns: {id: $id},
        _set: {metadata_retries: 0, metadata_synced: false}
    ) {
        id
    }
}
